#1번 풀이
def solution(numbers):
    answer = ''
    array = []
    flag = True
    for i in range(len(numbers)):
        if(numbers[i] != 0):
            flag = False
        key = ''
        for j in range(4):
            key += str(numbers[i])
        array.append((key[:4], i))
    array.sort(reverse = True)
    for i in range(len(numbers)):
        answer += str(numbers[array[i][1]])
    if(flag):
        answer = '0'
    return answer
     
/# 2번 풀이

numbers.sort(reverse = True)
count = []
for i in range(len(numbers)):
  count.append(len(str(numbers[i])))
  numbers[i] = numbers[i] * (10 ** (count[0] - count[i]))
  temp.append((numbers[i], count[0] - count[i]))
print(count)
max = numbers[0]
print(numbers)

numbers.sort(reverse = True)
temp.sort(reverse = True)

print(temp)
flag = True
answer = ''
exp = ''
bk = []

for i in range(len(numbers)):
  sort = int(numbers[i] / (10 ** max))

for i in range(len(numbers)):
  if(temp[i][1] > 0):
    numbers[i] = int(numbers[i] / (10 ** temp[i][1]))
#앞자리가 같은것만 정렬하면 시간이 줄지않을까?
for j in range(len(numbers)):
  for i in range(len(numbers) - 1):
    if(str(numbers[i]) + str(numbers[i+1]) < str(numbers[i+1]) + str(numbers[i])):
      numbers[i], numbers[i+1] = numbers[i+1], numbers[i]
      print("A")
print(numbers)
for i in range(len(numbers)):
  #exp = str(numbers[i]) + answer
  answer += str(numbers[i])
  #if(answer < exp):
  #  answer = exp
  
  if(numbers[i] != 0):
    flag = False
if(flag):
  answer = '0'
print(answer)
/# 처음엔 이렇게 했다가 실패 해서 1번 방법으로 풀이
