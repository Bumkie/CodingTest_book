n, m = list(map(int, input().split()))

array = (list(map(int, input().split())))


def binary_search(array, sum, start, end):
  if(start > end):
    return None

  mid = (end + start) // 2
  total = 0
  for i in range(n):
    if(array[i] >= mid):
      total += array[i] - mid
  if(total == sum):
    return mid
  elif(total > sum):
    return binary_search(array, sum, mid+1, end)
  else:
    return binary_search(array, sum, start, mid-1)

result = binary_search(array, m, 0, max(array))

print(result)

_______________________________Java______________________________________

package practice;

public class bfxc {
	public static void main(String[] args) {
		
		int n = 4;
		int m = 6;
		int[] array = {19, 15, 10, 17};
		
		int start = 0;
		
		int end = 0;
		
		for(int i = 0; i < n; i++) {
			if(end < array[i])
				end = array[i];
		}
		int result = 0;
		
		while(start <= end) {
			int mid = (end + start) / 2;
			
			int total = 0;
			
			for(int i = 0; i < n; i++) {
				if(array[i] > mid)
					total += array[i] - mid;
			}
			if(total < m)
				end = mid - 1;
			else {
				result = mid;
				start = mid + 1;
			}
		}
		System.out.println(result);
	}	
}
