n = int(input())

d = [0] * 30001

for i in range(2, n+1):
  d[i] = d[i-1] + 1

  if i % 2 == 0:
    d[i] = min(d[i], d[i // 2] + 1)

  if i % 3 == 0:
    d[i] = min(d[i], d[i // 3] + 1)

  if i % 5 == 0:
    d[i] = min(d[i], d[i // 5] + 1)

print(d[n])


_______________________Java____________________________

package practice;

public class bfxc {
	public static void main(String[] args) {
		
		int n = 26;
		
		int[] arr = new int[n+1];
		
		for(int i = 2; i < n + 1; i++) {
			arr[i] = arr[i - 1] + 1;
			
			if(i % 2 == 0)
				arr[i] = Math.min(arr[i], arr[i / 2] + 1);
			if(i % 3 == 0)
				arr[i] = Math.min(arr[i], arr[i / 3] + 1);
			if(i % 5 == 0)
				arr[i] = Math.min(arr[i], arr[i / 5] + 1);
		}
		
		System.out.println(arr[n]);
	}	
}
